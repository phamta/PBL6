{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const token = request.cookies.get('token')\r\n  const { pathname } = request.nextUrl\r\n\r\n  // Public routes that don't require authentication\r\n  const publicRoutes = ['/login', '/register']\r\n  \r\n  // Check if the current path is a public route\r\n  const isPublicRoute = publicRoutes.some(route => pathname.startsWith(route))\r\n\r\n  // If user is not authenticated and trying to access protected route\r\n  if (!token && !isPublicRoute && pathname !== '/') {\r\n    return NextResponse.redirect(new URL('/login', request.url))\r\n  }\r\n\r\n  // If user is authenticated and trying to access login page, redirect to dashboard\r\n  if (token && (pathname === '/login' || pathname === '/')) {\r\n    return NextResponse.redirect(new URL('/dashboard', request.url))\r\n  }\r\n\r\n  return NextResponse.next()\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     */\r\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\r\n  ],\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC;IAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;KAAY;IAE5C,8CAA8C;IAC9C,MAAM,gBAAgB,aAAa,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC;IAErE,oEAAoE;IACpE,IAAI,CAAC,SAAS,CAAC,iBAAiB,aAAa,KAAK;QAChD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,kFAAkF;IAClF,IAAI,SAAS,CAAC,aAAa,YAAY,aAAa,GAAG,GAAG;QACxD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}