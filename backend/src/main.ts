import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';

/**
 * Bootstrap function - Kh·ªüi t·∫°o ·ª©ng d·ª•ng NestJS
 */
async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Global validation pipe
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
      transformOptions: {
        enableImplicitConversion: true,
      },
    }),
  );

  // CORS configuration
  app.enableCors({
    origin: process.env.FRONTEND_URL || 'http://localhost:3000',
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],
  });

  // API prefix
  app.setGlobalPrefix('api/v1');

  // Swagger Documentation
  const config = new DocumentBuilder()
    .setTitle('H·ªá th·ªëng Qu·∫£n l√Ω H·ª£p t√°c Qu·ªëc t·∫ø - ƒêHBK ƒê√† N·∫µng')
    .setDescription(`
      ## API Documentation for International Cooperation Management System
      
      **Ch·ª©c nƒÉng ch√≠nh:**
      - üîê Authentication & Authorization (JWT)
      - üìÑ Qu·∫£n l√Ω MOU v√† vƒÉn b·∫£n h·ª£p t√°c (UC002, UC003)
      - üõÇ Qu·∫£n l√Ω Visa v√† gia h·∫°n (UC004, UC005)
      - üåê Qu·∫£n l√Ω ƒëo√†n kh√°ch qu·ªëc t·∫ø (UC006)
      - üìã X√°c nh·∫≠n b·∫£n d·ªãch (UC007)
      - üìä Th·ªëng k√™ v√† b√°o c√°o (UC008)
      - ‚öôÔ∏è C·∫•u h√¨nh h·ªá th·ªëng (UC009)
      - üìß Th√¥ng b√°o v√† nh·∫Øc h·∫°n t·ª± ƒë·ªông
      - üìù Ghi log ho·∫°t ƒë·ªông ng∆∞·ªùi d√πng
      
      **Roles:**
      - SYSTEM_ADMIN: Qu·∫£n tr·ªã h·ªá th·ªëng
      - DEPARTMENT_OFFICER: C√°n b·ªô ph√≤ng KHCN&ƒêN
      - LEADERSHIP: L√£nh ƒë·∫°o
      - FACULTY_STAFF: C√°n b·ªô khoa/vi·ªán
      - STUDENT: Sinh vi√™n
    `)
    .setVersion('1.0.0')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'JWT',
        description: 'Enter JWT token',
        in: 'header',
      },
      'JWT-auth',
    )
    .addServer(process.env.API_URL || 'http://localhost:3001', 'Development')
    .addTag('Authentication', 'ƒêƒÉng nh·∫≠p, ƒëƒÉng k√Ω, qu·∫£n l√Ω phi√™n')
    .addTag('User Management', 'Qu·∫£n l√Ω ng∆∞·ªùi d√πng')
    .addTag('Document Management', 'Qu·∫£n l√Ω MOU v√† vƒÉn b·∫£n h·ª£p t√°c')
    .addTag('Visa Management', 'Qu·∫£n l√Ω Visa v√† gia h·∫°n')
    .addTag('Guest Management', 'Qu·∫£n l√Ω ƒëo√†n kh√°ch qu·ªëc t·∫ø')
    .addTag('Translation Management', 'Qu·∫£n l√Ω x√°c nh·∫≠n b·∫£n d·ªãch')
    .addTag('Report Management', 'Th·ªëng k√™ v√† b√°o c√°o')
    .addTag('System Configuration', 'C·∫•u h√¨nh h·ªá th·ªëng')
    .addTag('Notifications', 'Th√¥ng b√°o v√† nh·∫Øc h·∫°n')
    .addTag('Activity Logs', 'Ghi log ho·∫°t ƒë·ªông')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      tagsSorter: 'alpha',
      operationsSorter: 'alpha',
    },
  });

  // Start server
  const port = process.env.PORT || 3001;
  await app.listen(port);

  console.log(`
  üöÄ H·ªá th·ªëng Qu·∫£n l√Ω H·ª£p t√°c Qu·ªëc t·∫ø - ƒêHBK ƒê√† N·∫µng
  üìç Server ƒëang ch·∫°y t·∫°i: http://localhost:${port}
  üìö API Documentation: http://localhost:${port}/api/docs
  üóÑÔ∏è  Database: ${process.env.DATABASE_URL ? 'Connected' : 'Check DATABASE_URL'}
  üîß Environment: ${process.env.NODE_ENV || 'development'}
  `);
}

bootstrap().catch((error) => {
  console.error('‚ùå L·ªói kh·ªüi t·∫°o ·ª©ng d·ª•ng:', error);
  process.exit(1);
});